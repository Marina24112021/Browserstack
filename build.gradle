plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id("io.freefair.lombok") version "8.11"
}

repositories {
    mavenCentral()
}

def aspectjWeaverVersion = "1.9.22",
    selenideVersion = "6.13.0",
    restAssuredVersion = "5.3.0",
    allureVersion = "2.21.0",
    junitVersion = "5.9.3",
    slf4jVersion = "2.0.7",
        assertjVersion = "3.26.3"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjWeaverVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:8.3.0",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'org.aeonbits.owner:owner:1.0.12',
            "commons-io:commons-io:2.11.0",
            "org.assertj:assertj-core:$assertjVersion"
    )
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
task browserstack(type: Test) {
    useJUnitPlatform {
        includeTags("browserstack")
    }
}

task emulation (type: Test) {
    useJUnitPlatform {
        includeTags("emulation")
    }
}